// <auto-generated />
using System;
using MTM_Web_App.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MTM_Web_App.Server.Migrations
{
    [DbContext(typeof(MTM_Web_AppServerContext))]
    [Migration("20241211195802_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MTM_Web_App.Server.Controllers.HotelResProcessed", b =>
                {
                    b.Property<int>("FirstDigit")
                        .HasColumnType("int");

                    b.Property<int>("FourthDigit")
                        .HasColumnType("int");

                    b.Property<string>("ReservationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SecondDigit")
                        .HasColumnType("int");

                    b.Property<int>("ThirdDigit")
                        .HasColumnType("int");

                    b.ToTable("HotelResProcessed");
                });

            modelBuilder.Entity("MTM_Web_App.Server.Models.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("HotelId")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("HouseNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Locale")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("RestaurantId")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("Road")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.HasIndex("RestaurantId");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("MTM_Web_App.Server.Models.HRating", b =>
                {
                    b.Property<decimal>("RatingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(20,0)");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("RatingId"));

                    b.Property<decimal>("HotelId")
                        .HasColumnType("decimal(20,0)");

                    b.Property<long>("Rate")
                        .HasColumnType("bigint");

                    b.Property<decimal>("UserId")
                        .HasColumnType("decimal(20,0)");

                    b.HasKey("RatingId");

                    b.HasIndex("HotelId");

                    b.ToTable("HotelRatings");
                });

            modelBuilder.Entity("MTM_Web_App.Server.Models.Hotel", b =>
                {
                    b.Property<decimal>("HotelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(20,0)");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("HotelId"));

                    b.Property<TimeOnly>("CheckIn")
                        .HasColumnType("time");

                    b.Property<TimeOnly>("CheckOut")
                        .HasColumnType("time");

                    b.Property<int>("Currency")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Facilities")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<decimal>("UserId")
                        .HasColumnType("decimal(20,0)");

                    b.HasKey("HotelId");

                    b.HasIndex("UserId");

                    b.ToTable("Hotels");
                });

            modelBuilder.Entity("MTM_Web_App.Server.Models.HotelImage", b =>
                {
                    b.Property<decimal>("HotelImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(20,0)");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("HotelImageId"));

                    b.Property<decimal>("HotelId")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("ImageSrc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HotelImageId");

                    b.HasIndex("HotelId");

                    b.ToTable("HotelImage");
                });

            modelBuilder.Entity("MTM_Web_App.Server.Models.HotelRes", b =>
                {
                    b.Property<decimal>("HotelResId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(20,0)");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("HotelResId"));

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReservationNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReservationVerification")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("RoomId")
                        .HasColumnType("decimal(20,0)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("SummaryCost")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UserId")
                        .HasColumnType("decimal(20,0)");

                    b.HasKey("HotelResId");

                    b.HasIndex("RoomId");

                    b.HasIndex("UserId");

                    b.ToTable("HotelRes");
                });

            modelBuilder.Entity("MTM_Web_App.Server.Models.Logger", b =>
                {
                    b.Property<decimal>("LogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(20,0)");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("LogId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LogName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LogTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("UserId")
                        .HasColumnType("decimal(20,0)");

                    b.HasKey("LogId");

                    b.HasIndex("UserId");

                    b.ToTable("Logger");
                });

            modelBuilder.Entity("MTM_Web_App.Server.Models.OTP", b =>
                {
                    b.Property<decimal>("OtpId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(20,0)");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("OtpId"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("UserId")
                        .HasColumnType("decimal(20,0)");

                    b.Property<DateTime>("ValidUntil")
                        .HasColumnType("datetime2");

                    b.HasKey("OtpId");

                    b.HasIndex("UserId");

                    b.ToTable("OTPs");
                });

            modelBuilder.Entity("MTM_Web_App.Server.Models.OpeningHours", b =>
                {
                    b.Property<int>("OpeningHoursId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OpeningHoursId"));

                    b.Property<TimeOnly>("ClosingTime")
                        .HasColumnType("time");

                    b.Property<int>("DayOfWeek")
                        .HasColumnType("int");

                    b.Property<TimeOnly>("OpeningTime")
                        .HasColumnType("time");

                    b.Property<decimal>("RestaurantId")
                        .HasColumnType("decimal(20,0)");

                    b.HasKey("OpeningHoursId");

                    b.HasIndex("RestaurantId");

                    b.ToTable("OpeningHours");
                });

            modelBuilder.Entity("MTM_Web_App.Server.Models.RRating", b =>
                {
                    b.Property<decimal>("RatingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(20,0)");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("RatingId"));

                    b.Property<long>("Rate")
                        .HasColumnType("bigint");

                    b.Property<decimal>("RestaurantId")
                        .HasColumnType("decimal(20,0)");

                    b.Property<decimal>("UserId")
                        .HasColumnType("decimal(20,0)");

                    b.HasKey("RatingId");

                    b.HasIndex("RestaurantId");

                    b.ToTable("RestaurantRating");
                });

            modelBuilder.Entity("MTM_Web_App.Server.Models.Restaurant", b =>
                {
                    b.Property<decimal>("RestaurantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(20,0)");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("RestaurantId"));

                    b.Property<int>("Currency")
                        .HasColumnType("int");

                    b.Property<string>("Cusines")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("UserId")
                        .HasColumnType("decimal(20,0)");

                    b.HasKey("RestaurantId");

                    b.HasIndex("UserId");

                    b.ToTable("Restaurants");
                });

            modelBuilder.Entity("MTM_Web_App.Server.Models.RestaurantImage", b =>
                {
                    b.Property<decimal>("RestaurantImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(20,0)");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("RestaurantImageId"));

                    b.Property<string>("ImageSrc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("RestaurantId")
                        .HasColumnType("decimal(20,0)");

                    b.HasKey("RestaurantImageId");

                    b.HasIndex("RestaurantId");

                    b.ToTable("RestaurantImage");
                });

            modelBuilder.Entity("MTM_Web_App.Server.Models.RestaurantRes", b =>
                {
                    b.Property<decimal>("RestaurantResId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(20,0)");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("RestaurantResId"));

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReservationNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReservationVerification")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("SummaryCost")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TableId")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("TableName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("UserId")
                        .HasColumnType("decimal(20,0)");

                    b.HasKey("RestaurantResId");

                    b.HasIndex("TableId");

                    b.HasIndex("UserId");

                    b.ToTable("RestaurantsRes");
                });

            modelBuilder.Entity("MTM_Web_App.Server.Models.Room", b =>
                {
                    b.Property<decimal>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(20,0)");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("RoomId"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Facilities")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("HotelId")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonCount")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RoomType")
                        .HasColumnType("int");

                    b.HasKey("RoomId");

                    b.HasIndex("HotelId");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("MTM_Web_App.Server.Models.RoomAvailability", b =>
                {
                    b.Property<decimal>("AvailabilityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(20,0)");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("AvailabilityId"));

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<bool>("IsReserved")
                        .HasColumnType("bit");

                    b.Property<decimal?>("RoomEntityId")
                        .HasColumnType("decimal(20,0)");

                    b.Property<decimal>("RoomId")
                        .HasColumnType("decimal(20,0)");

                    b.HasKey("AvailabilityId");

                    b.HasIndex("RoomEntityId");

                    b.HasIndex("RoomId");

                    b.ToTable("RoomAvailability");
                });

            modelBuilder.Entity("MTM_Web_App.Server.Models.RoomEntity", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(20,0)");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("Id"));

                    b.Property<decimal>("RoomId")
                        .HasColumnType("decimal(20,0)");

                    b.Property<int>("RoomNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.ToTable("RoomEntities");
                });

            modelBuilder.Entity("MTM_Web_App.Server.Models.RoomImage", b =>
                {
                    b.Property<decimal>("RoomImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(20,0)");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("RoomImageId"));

                    b.Property<string>("ImageSrc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("RoomId")
                        .HasColumnType("decimal(20,0)");

                    b.HasKey("RoomImageId");

                    b.HasIndex("RoomId");

                    b.ToTable("RoomImage");
                });

            modelBuilder.Entity("MTM_Web_App.Server.Models.Table", b =>
                {
                    b.Property<decimal>("TableId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(20,0)");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("TableId"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonCount")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("RestaurantId")
                        .HasColumnType("decimal(20,0)");

                    b.Property<int>("TableNumber")
                        .HasColumnType("int");

                    b.HasKey("TableId");

                    b.HasIndex("RestaurantId");

                    b.ToTable("Tables");
                });

            modelBuilder.Entity("MTM_Web_App.Server.Models.TableAvailability", b =>
                {
                    b.Property<decimal>("TableAvailabilityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(20,0)");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("TableAvailabilityId"));

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<bool>("IsReserved")
                        .HasColumnType("bit");

                    b.Property<decimal?>("TableEntityId")
                        .HasColumnType("decimal(20,0)");

                    b.Property<decimal>("TableId")
                        .HasColumnType("decimal(20,0)");

                    b.HasKey("TableAvailabilityId");

                    b.HasIndex("TableEntityId");

                    b.HasIndex("TableId");

                    b.ToTable("TableAvailability");
                });

            modelBuilder.Entity("MTM_Web_App.Server.Models.TableEntity", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(20,0)");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("Id"));

                    b.Property<decimal>("TableId")
                        .HasColumnType("decimal(20,0)");

                    b.Property<int>("TableNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TableId");

                    b.ToTable("TableEntities");
                });

            modelBuilder.Entity("MTM_Web_App.Server.Models.TableImage", b =>
                {
                    b.Property<decimal>("TableImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(20,0)");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("TableImageId"));

                    b.Property<string>("ImageSrc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TableId")
                        .HasColumnType("decimal(20,0)");

                    b.HasKey("TableImageId");

                    b.HasIndex("TableId");

                    b.ToTable("TableImage");
                });

            modelBuilder.Entity("MTM_Web_App.Server.Models.User", b =>
                {
                    b.Property<decimal>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(20,0)");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("UserId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GoogleSub")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsEmailValid")
                        .HasColumnType("bit");

                    b.Property<bool>("IsGooglePfp")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUserValid")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PfpSrc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Salt")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MTM_Web_App.Server.Models.Address", b =>
                {
                    b.HasOne("MTM_Web_App.Server.Models.Hotel", "Hotel")
                        .WithMany("Addresses")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("MTM_Web_App.Server.Models.Restaurant", "Restaurant")
                        .WithMany("Addresses")
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Hotel");

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("MTM_Web_App.Server.Models.HRating", b =>
                {
                    b.HasOne("MTM_Web_App.Server.Models.Hotel", null)
                        .WithMany("Ratings")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MTM_Web_App.Server.Models.Hotel", b =>
                {
                    b.HasOne("MTM_Web_App.Server.Models.User", "OwnerUser")
                        .WithMany("OwnedHotels")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OwnerUser");
                });

            modelBuilder.Entity("MTM_Web_App.Server.Models.HotelImage", b =>
                {
                    b.HasOne("MTM_Web_App.Server.Models.Hotel", "Hotel")
                        .WithMany("Images")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("MTM_Web_App.Server.Models.HotelRes", b =>
                {
                    b.HasOne("MTM_Web_App.Server.Models.Room", "Room")
                        .WithMany("HotelReservations")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MTM_Web_App.Server.Models.User", "ClientUser")
                        .WithMany("HotelRes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ClientUser");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("MTM_Web_App.Server.Models.Logger", b =>
                {
                    b.HasOne("MTM_Web_App.Server.Models.User", "User")
                        .WithMany("Logger")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("MTM_Web_App.Server.Models.OTP", b =>
                {
                    b.HasOne("MTM_Web_App.Server.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("MTM_Web_App.Server.Models.OpeningHours", b =>
                {
                    b.HasOne("MTM_Web_App.Server.Models.Restaurant", "Restaurant")
                        .WithMany("OpenDays")
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("MTM_Web_App.Server.Models.RRating", b =>
                {
                    b.HasOne("MTM_Web_App.Server.Models.Restaurant", null)
                        .WithMany("Ratings")
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MTM_Web_App.Server.Models.Restaurant", b =>
                {
                    b.HasOne("MTM_Web_App.Server.Models.User", "OwnerUser")
                        .WithMany("OwnedRestaurants")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OwnerUser");
                });

            modelBuilder.Entity("MTM_Web_App.Server.Models.RestaurantImage", b =>
                {
                    b.HasOne("MTM_Web_App.Server.Models.Restaurant", "Restaurant")
                        .WithMany("Images")
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("MTM_Web_App.Server.Models.RestaurantRes", b =>
                {
                    b.HasOne("MTM_Web_App.Server.Models.Table", "Table")
                        .WithMany("RestaurantReservations")
                        .HasForeignKey("TableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MTM_Web_App.Server.Models.User", "ClientUser")
                        .WithMany("RestaurantRes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ClientUser");

                    b.Navigation("Table");
                });

            modelBuilder.Entity("MTM_Web_App.Server.Models.Room", b =>
                {
                    b.HasOne("MTM_Web_App.Server.Models.Hotel", "Hotel")
                        .WithMany("Rooms")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("MTM_Web_App.Server.Models.RoomAvailability", b =>
                {
                    b.HasOne("MTM_Web_App.Server.Models.RoomEntity", null)
                        .WithMany("Availabilities")
                        .HasForeignKey("RoomEntityId");

                    b.HasOne("MTM_Web_App.Server.Models.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");
                });

            modelBuilder.Entity("MTM_Web_App.Server.Models.RoomEntity", b =>
                {
                    b.HasOne("MTM_Web_App.Server.Models.Room", "Room")
                        .WithMany("Rooms")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");
                });

            modelBuilder.Entity("MTM_Web_App.Server.Models.RoomImage", b =>
                {
                    b.HasOne("MTM_Web_App.Server.Models.Room", "Room")
                        .WithMany("Images")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");
                });

            modelBuilder.Entity("MTM_Web_App.Server.Models.Table", b =>
                {
                    b.HasOne("MTM_Web_App.Server.Models.Restaurant", "Restaurant")
                        .WithMany("Tables")
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("MTM_Web_App.Server.Models.TableAvailability", b =>
                {
                    b.HasOne("MTM_Web_App.Server.Models.TableEntity", null)
                        .WithMany("Availabilities")
                        .HasForeignKey("TableEntityId");

                    b.HasOne("MTM_Web_App.Server.Models.Table", "Table")
                        .WithMany()
                        .HasForeignKey("TableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Table");
                });

            modelBuilder.Entity("MTM_Web_App.Server.Models.TableEntity", b =>
                {
                    b.HasOne("MTM_Web_App.Server.Models.Table", "Table")
                        .WithMany("Tables")
                        .HasForeignKey("TableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Table");
                });

            modelBuilder.Entity("MTM_Web_App.Server.Models.TableImage", b =>
                {
                    b.HasOne("MTM_Web_App.Server.Models.Table", "Table")
                        .WithMany("Images")
                        .HasForeignKey("TableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Table");
                });

            modelBuilder.Entity("MTM_Web_App.Server.Models.Hotel", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("Images");

                    b.Navigation("Ratings");

                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("MTM_Web_App.Server.Models.Restaurant", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("Images");

                    b.Navigation("OpenDays");

                    b.Navigation("Ratings");

                    b.Navigation("Tables");
                });

            modelBuilder.Entity("MTM_Web_App.Server.Models.Room", b =>
                {
                    b.Navigation("HotelReservations");

                    b.Navigation("Images");

                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("MTM_Web_App.Server.Models.RoomEntity", b =>
                {
                    b.Navigation("Availabilities");
                });

            modelBuilder.Entity("MTM_Web_App.Server.Models.Table", b =>
                {
                    b.Navigation("Images");

                    b.Navigation("RestaurantReservations");

                    b.Navigation("Tables");
                });

            modelBuilder.Entity("MTM_Web_App.Server.Models.TableEntity", b =>
                {
                    b.Navigation("Availabilities");
                });

            modelBuilder.Entity("MTM_Web_App.Server.Models.User", b =>
                {
                    b.Navigation("HotelRes");

                    b.Navigation("Logger");

                    b.Navigation("OwnedHotels");

                    b.Navigation("OwnedRestaurants");

                    b.Navigation("RestaurantRes");
                });
#pragma warning restore 612, 618
        }
    }
}
